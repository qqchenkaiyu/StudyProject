为什么使用消息队列
解耦 各个系统减少互相调用，只根据自己需要订阅消息
削峰 接口发消息到mq,后台慢慢根据入库能力处理消息
异步 减少接口耗时，后续处理完发邮件短信告知

如何保证高可用
高可用就是集群后一台机器挂掉不至于影响服务，kafka架构里一个topic的数据分成多分partition存在多个broker上，
每个partition又会有备份在其他broker上
生成消息时，可指定ack参数决定leader要不要把数据备份到flower再返回ok,读写都只能在leader上
消费的时候，消息被所有flower同步过才能被消费

如何保证消息的幂等性
重复消费不会出问题就是幂等性
如果是写redis,set天生就是幂等的
如果写数据库，不要直接insert而是insertOrUpdate
如果都不是，消息里要带id,消费的时候去redis查是否消费过，消费过就别处理。

如何保证消息不丢失
消费端丢数据：改为处理完消息手动提交，防止自动提交后未处理
服务端丢数据：leader挂掉信息没及时同步，设置ack=all

如何保证消息的顺序性：
消息根据key分配到不同partition里，partition里天然有序
消费者端消费到数据后根据key放到内存队列保证有序

消息积压怎么办：
提高消费并行度-增加consumer
检查代码，优化执行效率，必要时可先写本地文件

kafka目前各个group对各个topic的消费offset是存在一个consumer_offset topic里的
