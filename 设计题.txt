1.设计mysql高可用
mysql采用主从，另外使用一个工具进行监测主节点，并自动替换从节点为主节点

设计mq:
参考kafka,为了高可用，数据需要备份，为了负载均衡，数据分在各个节点

设计短链系统：- 给你短链返回长链 给你长链返回短链
首先基于长链，hash算法生成短链会出现冲突--不同长链生成了同样的短链
重点怎么保证不同长链分配的id不同-雪花算法 或者redis  低进制转高进制变短
雪花算法需要考虑时钟问题(保存过去一小时每毫秒的最大id,如果时钟回拨，从那一毫秒继续生成)，redis做自增id生成需要考虑持久化
所以就是每来一个长链，分配id生成短链，存到redis，数据库存两者跟对应的hash

设计秒杀系统
访问量大-页面静态化（使用CDN），秒杀链接加密（前端用接口获得后端加密的url，只有知道盐的前端页面能请求）
前端置灰，限流降级熔断，
接口幂等（防止重复购买）
分布式锁（解决超卖 有lua就不用了）
减库存核心逻辑使用lua脚本实现，抢到后mq异步处理入库（提升性能 mq可靠 处理完再提交offset 幂等 数据库主键幂等）
秒杀系统单独搞微服务跟数据库，挂了不影响其他业务

