1.零拷贝技术
传统读写  read方法：从设备到内核缓冲到用户态空间（用户态换到内核态再换回来）  write: 从用户态空间到内核缓冲到设备（用户态换到内核态再换回来）
DMA拷贝2次 缓存与用户态空间拷贝2次 调read方法切换内核态一次 调write方法切换内核态一次

sendfile:(从内核缓冲到内核缓冲)
DMA拷贝2次 从内核缓冲到内核缓冲cpu一次 调sendfile方法切换内核态一次

mmap:  read换成mmap(可以不拷贝到用户态空间，程序可以直接操作内核缓冲的内存)
DMA拷贝2次 从内核缓冲到内核缓冲cpu一次 调mmap方法切换内核态一次 调write方法切换内核态一次


1.nio
传统io:我等你完成 while(true) socket = socket.read(); //进内核态空间取单个数据 没有就wait()
非阻塞io:做点别的，过一会就来看看你完成了没 while(true) socket = socket.read(); //进内核态空间取单个数据 自旋
基于非阻塞io的多路复用：做点别的，过一会就来看看你们谁完成了 while(true) channels = selectChannel(); //进内核态空间取多个数据 自旋
nio:基于epoll 你做完了通知我，我不用等你  while(true) socket = socket.read(); //从内核态就绪队列取数据 没有就wait()
